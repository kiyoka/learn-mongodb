#!/bin/sh
:; #-*- mode: nendo; syntax: scheme -*-;;
:; exec /usr/local/bin/nendo $0 $*

;; Using this gem
;;   http://rubydoc.info/gems/apachelogregex/0.1.0/frames
(require "apachelogregex")
(require "date")
(use util.list)
(use rfc.json)

(define ap2-format-list
  '(
    ;; format              symbol        need \"...\"
    ("%h"                  hostname      #f)
    ("%l"                  client_id     #f)
    ("%u"                  username      #f)
    ("%t"                  timestamp     #f)
    ("%r"                  request       #t)
    ("%>s"                 result_code   #f)
    ("%b"                  tfrsize       #f)
    ("%{Referer}i"         referer       #t)
    ("%{User-Agent}i"      user_agent    #t)))

(define ap2-parser
  (let1 combind
      (string-join
       (map
        (lambda (x)
          (if (third x)
              (string-append "\\\"" (first x) "\\\"")
              (first x)))
        ap2-format-list)
       " ")
    (ApacheLogRegex.new combind)))


(define (ap2-parse-combined line)
  (guard (e ((e.is_a? ApacheLogRegex::ParseError)
             (errorf "Error parsing log file: %s" e.message)))
    (let1 v (ap2-parser.parse! line)
      (map
       (lambda (x)
         (let ([key (car x)]
               [val (cdr x)])
           (cons
            (assq-ref key (map
                           (lambda (entry)
                             (cons (first entry) (second entry)))
                           ap2-format-list))
            val)))
       (hash-table->alist v)))))


(define (to-mongo-data arg-alist)
  ;;    irb
  ;; irb(main):024:0> dt = DateTime.parse "[09/Oct/2011 06:45:00 +0900]"
  ;; => #<DateTime: 2011-10-09T06:45:00+09:00 ((2455843j,78300s,0n),+32400s,2299161j)>
  ;; irb(main):025:0> dt.to_s
  ;; => "2011-10-09T06:45:00+09:00"
  ;; irb(main):026:0> 
  
  ;;    mongodb shell
  ;; > ISODate( "2011-10-09T06:45:00+09:00" );
  ;; ISODate("2011-10-08T21:45:00Z")

  (let* ([_ (assq-ref 'timestamp arg-alist)] ;; like "[09/Oct/2011:06:45:00 +0900]"
         [_ (_.sub #/[:]/ " ")]
         [dt   (DateTime.parse #?=_)])
    (map
     (lambda (x)
       (case (car x)
         ((timestamp)
          (cons (car x)
                (alist->hash-table
                 `(
                   ("$date" . ,(* (dt.to_time.to_i) 1000) ;; milisecond
                    )))))
         ((tfrsize)
          (cons (car x) (. (cdr x) to_i)))
         (else
          x)))
     arg-alist)))


;;(to-mongo-data '(
;;                   (timestamp . "[09/Oct/2011 06:45:00 +0900]")
;;                   (a . b)
;;                   (tfrsize . "128")))
 

(define (main argv)
  (for-each
   (lambda (line)
     (print
      (construct-json-string
       (to-mongo-data
        #?=(ap2-parse-combined line)))))
   STDIN))

